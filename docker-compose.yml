services:
  hmpps-e-surveillance-api:
    build:
      context: .
    networks:
      - hmpps
    container_name: hmpps-e-surveillance-api
    ports:
      - "8081:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health/ping" ]
    environment:
      - SERVER_PORT=8080
      - HMPPS_AUTH_URL=http://hmpps-auth:8080/auth
      - SPRING_PROFILES_ACTIVE=local
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=eu-west-2
      - SPRING_DATASOURCE_URL=jdbc:postgresql://surveillance-db:5432/esurveillance
      - SPRING_DATASOURCE_USERNAME=myuser
      - SPRING_DATASOURCE_PASSWORD=mypassword

  hmpps-auth:
    image: quay.io/hmpps/hmpps-auth:latest
    networks:
      - hmpps
    container_name: hmpps-auth
    ports:
      - "8090:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/auth/health" ]
    environment:
      - SERVER_PORT=8080
      - SPRING_PROFILES_ACTIVE=dev
      - APPLICATION_AUTHENTICATION_UI_ALLOWLIST=0.0.0.0/0

  localstack:
    image: localstack/localstack:latest
    container_name: localstack
    networks:
      - hmpps
    ports:
      - "4566:4566"
      - "4571:4571"
    environment:
      - SERVICES=s3,sns,sqs
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=eu-west-2
      - DEFAULT_REGION=eu-west-2
      - DEBUG=1
      - LOCALSTACK_HOST=localstack:4566
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./localstack:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
      - ./init:/etc/localstack/init/ready.d

  surveillance-db:
    image: postgres:17.4
    container_name: surveillance-db
    networks:
      - hmpps
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: esurveillance
    ports:
      - "5432:5432"

networks:
  hmpps:


volumes:
  postgres-data:
